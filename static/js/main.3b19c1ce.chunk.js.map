{"version":3,"sources":["store/store.ts","components/actions-amount/icon-person.svg","components/actions-amount/ActionsAmount.tsx","components/actions-bill/icon-dollar.svg","components/actions-bill/ActionsBill.tsx","components/actions-tip/ActionsTip.tsx","components/logo/logo.svg","components/logo/Logo.tsx","components/summary-row-tip-amount/SummaryRowTipAmount.tsx","components/summary-row-total/SummaryRowTotal.tsx","components/summary/Summary.tsx","helpers/helpers.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStore","create","set","billAmount","tipAmount","tipAmountCustom","peopleAmount","setBillAmount","amount","produce","state","RegExp","test","setTipAmount","max100","setTipAmountCustom","setPeopleAmount","resetStore","ActionsAmount","store","inputValue","className","htmlFor","join","src","Person","alt","type","placeholder","id","value","onChange","event","val","target","ActionsBill","Dollar","ActionsTip","inputValueCustom","handleTipClick","onClick","Logo","logo","SummaryRowTipAmount","cost","SummaryRowTotal","Summary","useState","tipAmountCost","setTipAmountCost","totalCost","setTotalCost","useEffect","bill","tip","people","parseFloat","toFixed","toString","calculateTotalCost","Fragment","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAeaA,EAAWC,aAAmB,SAACC,GAAD,MAAU,CACjDC,WAAY,GACZC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,cAAe,SAACC,GAAD,OACXN,EACIO,aAAQ,SAACC,GACqB,IAAIC,OAAO,YAEdC,KAAKJ,KACH,MAArBE,EAAMP,YAAiC,OAAXK,IAEhCE,EAAMP,WAAaK,SAG/BK,aAAc,SAACL,GAAD,OACVN,EACIO,aAAQ,SAACC,GACL,IAAMI,EAAS,IAAIH,OAAO,uBAEX,KAAXH,IACAE,EAAMN,UAAY,IAGjBU,EAAOF,KAAKJ,KAEjBE,EAAMN,UAAYI,QAG9BO,mBAAoB,SAACP,GAAD,OAChBN,EACIO,aAAQ,SAACC,GACL,IAAMI,EAAS,IAAIH,OAAO,uBAEX,KAAXH,IACAE,EAAML,gBAAkB,IAGvBS,EAAOF,KAAKJ,KAEjBE,EAAML,gBAAkBG,QAGpCQ,gBAAiB,SAACR,GAAD,OACbN,EACIO,aAAQ,SAACC,GACqB,IAAIC,OAAO,YAEdC,KAAKJ,KACD,MAAvBE,EAAMJ,cAAmC,OAAXE,IAElCE,EAAMJ,aAAeE,SAGjCS,WAAY,kBACRf,EACIO,aAAQ,SAACC,GACLA,EAAMP,WAAa,GACnBO,EAAMN,UAAY,GAClBM,EAAML,gBAAkB,GACxBK,EAAMJ,aAAe,YC5EtB,MAA0B,wC,OCI5BY,EAAgB,WACzB,IAAMF,EAAkBhB,GAAS,SAACmB,GAAD,OAAWA,EAAMH,mBAC5CI,EAAapB,GAAS,SAACmB,GAAD,OAAWA,EAAMb,gBAE7C,OACI,sBAAKe,UAAU,iBAAf,UACI,uBAAOA,UAAU,gBAAgBC,QAAQ,SAAzC,8BAGA,sBACID,UAAW,CACP,aADO,UAEW,MAAfD,EAAqB,YAAc,KACxCG,KAAK,KAJX,UAMI,qBAAKF,UAAU,sBAAf,SACI,qBAAKG,IAAKC,EAAQC,IAAI,aAE1B,qBAAKL,UAAU,oBAAf,SACI,uBACIM,KAAK,OACLN,UAAU,cACVO,YAAY,IACZC,GAAG,SACHC,MAAOV,EACPW,SAAU,SACNC,GAEA,IAAMC,EAAMD,EAAME,OAAOJ,MACzBd,EAAgBiB,QAIZ,MAAfb,GACG,qBAAKC,UAAU,oBAAf,kCCtCL,MAA0B,wCCI5Bc,EAAc,WACvB,IAAMf,EAAapB,GAAS,SAACmB,GAAD,OAAWA,EAAMhB,cACvCI,EAAgBP,GAAS,SAACU,GAAD,OAAWA,EAAMH,iBAEhD,OACI,sBAAKc,UAAU,eAAf,UACI,uBAAOC,QAAQ,OAAOD,UAAU,gBAAhC,kBAGA,sBACIA,UAAW,CACP,aADO,UAEW,MAAfD,EAAqB,YAAc,KACxCG,KAAK,KAJX,UAMI,qBAAKF,UAAU,sBAAf,SACI,qBAAKG,IAAKY,EAAQV,IAAI,WAE1B,qBAAKL,UAAU,oBAAf,SACI,uBACIM,KAAK,OACLN,UAAU,cACVO,YAAY,IACZC,GAAG,OACHC,MAAOV,EACPW,SAAU,SACNC,GAEA,IAAMC,EAAMD,EAAME,OAAOJ,MACzBvB,EAAc0B,QAIV,MAAfb,GACG,qBAAKC,UAAU,oBAAf,kCCnCPgB,EAAa,WACtB,IAAMjB,EAAapB,GAAS,SAACU,GAAD,OAAWA,EAAMN,aACvCS,EAAeb,GAAS,SAACU,GAAD,OAAWA,EAAMG,gBAEzCyB,EAAmBtC,GAAS,SAACU,GAAD,OAAWA,EAAML,mBAC7CU,EAAqBf,GAAS,SAACU,GAAD,OAAWA,EAAMK,sBAE/CwB,EAAiB,SAAC/B,GACpBO,EAAmB,IACnBF,EAAaL,IASjB,OACI,sBAAKa,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,0BAEA,sBAAKA,UAAU,uBAAf,UACI,wBACIA,UAAW,CACP,aADO,UAEW,MAAfD,EAAqB,SAAW,KACrCG,KAAK,KACPiB,QAAS,kBAAMD,EAAe,MALlC,gBASA,wBACIlB,UAAW,CACP,aADO,UAEW,OAAfD,EAAsB,SAAW,KACtCG,KAAK,KACPiB,QAAS,kBAAMD,EAAe,OALlC,iBASA,wBACIlB,UAAW,CACP,aADO,UAEW,OAAfD,EAAsB,SAAW,KACtCG,KAAK,KACPiB,QAAS,kBAAMD,EAAe,OALlC,iBASA,wBACIlB,UAAW,CACP,aADO,UAEW,OAAfD,EAAsB,SAAW,KACtCG,KAAK,KACPiB,QAAS,kBAAMD,EAAe,OALlC,iBASA,wBACIlB,UAAW,CACP,aADO,UAEW,OAAfD,EAAsB,SAAW,KACtCG,KAAK,KACPiB,QAAS,kBAAMD,EAAe,OALlC,iBASA,uBACIlB,UAAW,CACP,YADO,UAEJiB,EAAmB,SAAW,KACnCf,KAAK,KACPI,KAAK,OACLC,YAAY,SACZE,MAAOQ,EACPP,SAhEQ,SAACC,GACrB,IAAMC,EAAMD,EAAME,OAAOJ,MACzBjB,EAAa,IACbE,EAAmBkB,aClBZ,MAA0B,iCCG5BQ,EAAO,WAChB,OACI,qBAAKpB,UAAU,YAAf,SACI,qBAAKG,IAAKkB,EAAMhB,IAAI,gB,OCAnBiB,EAAuC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnD,OACI,sBAAKvB,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,qBAAf,wBACA,qBAAKA,UAAU,sBAAf,yBAEJ,sBAAKA,UAAU,qBAAf,cAAsCuB,SCPrCC,EAAmC,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAC/C,OACI,sBAAKvB,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,qBAAf,mBACA,qBAAKA,UAAU,sBAAf,yBAEJ,sBAAKA,UAAU,qBAAf,cAAsCuB,SCPrCE,EAAU,WACnB,IAAM3B,EAAQnB,IADW,EAGiB+C,mBAAS,IAH1B,mBAGlBC,EAHkB,KAGHC,EAHG,OAISF,mBAAS,IAJlB,mBAIlBG,EAJkB,KAIPC,EAJO,KA+BzB,OAzBAC,qBAAU,WACNH,EAAiB,QACjBE,EAAa,QAEb,IChBqBE,EAAcC,EAAaC,EDgB1CnD,EAAYe,EAAMd,gBAClBc,EAAMd,gBACNc,EAAMf,UACNe,EAAMf,UACN,GAEDA,GAAce,EAAMb,cAAiBa,EAAMhB,aAEhDgD,ECd0B,SAC9BE,EACAC,EACAC,GAEA,IAAMpD,EAAaqD,WAAWH,GACxBjD,EAAYoD,WAAWF,GAAO,IAC9BhD,EAAekD,WAAWD,GAKhC,OAHsBpD,EAAaG,EACbH,EAAaC,EAAaE,GAEtBmD,QAAQ,GAAGC,WDG7BC,CAAmBxC,EAAMhB,WAAYC,EAAWe,EAAMb,eAE1D2C,GC3BqBI,ED4BJlC,EAAMhB,WC5BYmD,ED4BAlD,EC5BamD,ED4BFpC,EAAMb,cC3BrCkD,WAAWH,IACTG,WAAWF,GACC,KACZE,WAAWD,IAGjBE,QAAQ,GAAGC,gBDuBvB,CACCvC,EAAMhB,WACNgB,EAAMf,UACNe,EAAMb,aACNa,EAAMd,kBAIN,eAAC,IAAMuD,SAAP,WACI,cAAC,EAAD,CAAqBhB,KAAMI,IAC3B,cAAC,EAAD,CAAiBJ,KAAMM,IACvB,wBAAQ7B,UAAU,eAAemB,QAASrB,EAAMF,WAAhD,uBEdG4C,MApBf,WACI,OACI,sBAAKxC,UAAU,eAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGJ,qBAAKA,UAAU,sBAAf,SACI,cAAC,EAAD,aCNLyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.3b19c1ce.chunk.js","sourcesContent":["import produce from \"immer\";\nimport create from \"zustand\";\n\ninterface StoreModel {\n    billAmount: string;\n    tipAmount: string;\n    tipAmountCustom: string;\n    peopleAmount: string;\n    setBillAmount: (amount: string) => void;\n    setTipAmount: (amount: string) => void;\n    setTipAmountCustom: (amount: string) => void;\n    setPeopleAmount: (amount: string) => void;\n    resetStore: () => void;\n}\n\nexport const useStore = create<StoreModel>((set) => ({\n    billAmount: \"\",\n    tipAmount: \"\",\n    tipAmountCustom: \"\",\n    peopleAmount: \"\",\n    setBillAmount: (amount) =>\n        set(\n            produce((state) => {\n                const onlyNumbersRegexp = new RegExp(\"^[0-9]*$\");\n\n                if (!onlyNumbersRegexp.test(amount)) return;\n                if (state.billAmount === \"0\" && amount === \"00\") return;\n\n                state.billAmount = amount;\n            })\n        ),\n    setTipAmount: (amount) =>\n        set(\n            produce((state) => {\n                const max100 = new RegExp(\"^(100|[1-9]?[0-9])$\");\n\n                if (amount === \"\") {\n                    state.tipAmount = \"\";\n                }\n\n                if (!max100.test(amount)) return;\n\n                state.tipAmount = amount;\n            })\n        ),\n    setTipAmountCustom: (amount) =>\n        set(\n            produce((state) => {\n                const max100 = new RegExp(\"^(100|[1-9]?[0-9])$\");\n\n                if (amount === \"\") {\n                    state.tipAmountCustom = \"\";\n                }\n\n                if (!max100.test(amount)) return;\n\n                state.tipAmountCustom = amount;\n            })\n        ),\n    setPeopleAmount: (amount) =>\n        set(\n            produce((state) => {\n                const onlyNumbersRegexp = new RegExp(\"^[0-9]*$\");\n\n                if (!onlyNumbersRegexp.test(amount)) return;\n                if (state.peopleAmount === \"0\" && amount === \"00\") return;\n\n                state.peopleAmount = amount;\n            })\n        ),\n    resetStore: () =>\n        set(\n            produce((state) => {\n                state.billAmount = \"\";\n                state.tipAmount = \"\";\n                state.tipAmountCustom = \"\";\n                state.peopleAmount = \"\";\n            })\n        ),\n}));\n","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React from \"react\";\nimport { useStore } from \"../../store/store\";\nimport Person from \"./icon-person.svg\";\n\nexport const ActionsAmount = () => {\n    const setPeopleAmount = useStore((store) => store.setPeopleAmount);\n    const inputValue = useStore((store) => store.peopleAmount);\n\n    return (\n        <div className=\"actions-amount\">\n            <label className=\"actions-label\" htmlFor=\"amount\">\n                Number of people\n            </label>\n            <div\n                className={[\n                    \"form-input\",\n                    `${inputValue === \"0\" ? \"has-error\" : \"\"}`,\n                ].join(\" \")}\n            >\n                <div className=\"form-input__overlay\">\n                    <img src={Person} alt=\"Person\" />\n                </div>\n                <div className=\"form-input__input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-field\"\n                        placeholder=\"0\"\n                        id=\"amount\"\n                        value={inputValue}\n                        onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                        ) => {\n                            const val = event.target.value;\n                            setPeopleAmount(val);\n                        }}\n                    />\n                </div>\n                {inputValue === \"0\" && (\n                    <div className=\"form-input__error\">Can't be zero</div>\n                )}\n            </div>\n        </div>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","import React from \"react\";\nimport { useStore } from \"../../store/store\";\nimport Dollar from \"./icon-dollar.svg\";\n\nexport const ActionsBill = () => {\n    const inputValue = useStore((store) => store.billAmount);\n    const setBillAmount = useStore((state) => state.setBillAmount);\n\n    return (\n        <div className=\"actions-bill\">\n            <label htmlFor=\"bill\" className=\"actions-label\">\n                Bill\n            </label>\n            <div\n                className={[\n                    \"form-input\",\n                    `${inputValue === \"0\" ? \"has-error\" : \"\"}`,\n                ].join(\" \")}\n            >\n                <div className=\"form-input__overlay\">\n                    <img src={Dollar} alt=\"Bill\" />\n                </div>\n                <div className=\"form-input__input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-field\"\n                        placeholder=\"0\"\n                        id=\"bill\"\n                        value={inputValue}\n                        onChange={(\n                            event: React.ChangeEvent<HTMLInputElement>\n                        ) => {\n                            const val = event.target.value;\n                            setBillAmount(val);\n                        }}\n                    />\n                </div>\n                {inputValue === \"0\" && (\n                    <div className=\"form-input__error\">Can't be zero</div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useStore } from \"../../store/store\";\n\nexport const ActionsTip = () => {\n    const inputValue = useStore((state) => state.tipAmount);\n    const setTipAmount = useStore((state) => state.setTipAmount);\n\n    const inputValueCustom = useStore((state) => state.tipAmountCustom);\n    const setTipAmountCustom = useStore((state) => state.setTipAmountCustom);\n\n    const handleTipClick = (amount: string) => {\n        setTipAmountCustom(\"\");\n        setTipAmount(amount);\n    };\n\n    const handleTipChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val = event.target.value;\n        setTipAmount(\"\");\n        setTipAmountCustom(val);\n    };\n\n    return (\n        <div className=\"actions-tip\">\n            <div className=\"actions-label\">Select tip %</div>\n\n            <div className=\"actions-tip__buttons\">\n                <button\n                    className={[\n                        \"tip-button\",\n                        `${inputValue === \"5\" ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    onClick={() => handleTipClick(\"5\")}\n                >\n                    5%\n                </button>\n                <button\n                    className={[\n                        \"tip-button\",\n                        `${inputValue === \"10\" ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    onClick={() => handleTipClick(\"10\")}\n                >\n                    10%\n                </button>\n                <button\n                    className={[\n                        \"tip-button\",\n                        `${inputValue === \"15\" ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    onClick={() => handleTipClick(\"15\")}\n                >\n                    15%\n                </button>\n                <button\n                    className={[\n                        \"tip-button\",\n                        `${inputValue === \"25\" ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    onClick={() => handleTipClick(\"25\")}\n                >\n                    25%\n                </button>\n                <button\n                    className={[\n                        \"tip-button\",\n                        `${inputValue === \"50\" ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    onClick={() => handleTipClick(\"50\")}\n                >\n                    50%\n                </button>\n                <input\n                    className={[\n                        \"tip-input\",\n                        `${inputValueCustom ? \"active\" : \"\"}`,\n                    ].join(\" \")}\n                    type=\"text\"\n                    placeholder=\"Custom\"\n                    value={inputValueCustom}\n                    onChange={handleTipChange}\n                />\n            </div>\n        </div>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/logo.42794e2d.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\n\nexport const Logo = () => {\n    return (\n        <div className=\"page-logo\">\n            <img src={logo} alt=\"Splitter\" />\n        </div>\n    );\n};\n","import React from \"react\";\n\ninterface Props {\n    cost: string;\n}\n\nexport const SummaryRowTipAmount: React.FC<Props> = ({ cost }) => {\n    return (\n        <div className=\"summary-row\">\n            <div className=\"summary-row__left\">\n                <div className=\"summary-row__title\">Tip amount</div>\n                <div className=\"summary-row__person\">/ person</div>\n            </div>\n            <div className=\"summary-row__right\">${cost}</div>\n        </div>\n    );\n};\n","import React from \"react\";\n\ninterface Props {\n    cost: string;\n}\n\nexport const SummaryRowTotal: React.FC<Props> = ({ cost }) => {\n    return (\n        <div className=\"summary-row\">\n            <div className=\"summary-row__left\">\n                <div className=\"summary-row__title\">Total</div>\n                <div className=\"summary-row__person\">/ person</div>\n            </div>\n            <div className=\"summary-row__right\">${cost}</div>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { SummaryRowTipAmount } from \"../summary-row-tip-amount/SummaryRowTipAmount\";\nimport { SummaryRowTotal } from \"../summary-row-total/SummaryRowTotal\";\nimport { calculateTip, calculateTotalCost } from \"../../helpers/helpers\";\nimport { useStore } from \"../../store/store\";\n\nexport const Summary = () => {\n    const store = useStore();\n\n    const [tipAmountCost, setTipAmountCost] = useState(\"\");\n    const [totalCost, setTotalCost] = useState(\"\");\n\n    useEffect(() => {\n        setTipAmountCost(\"0.00\");\n        setTotalCost(\"0.00\");\n\n        const tipAmount = store.tipAmountCustom\n            ? store.tipAmountCustom\n            : store.tipAmount\n            ? store.tipAmount\n            : \"\";\n\n        if (!tipAmount || !store.peopleAmount || !store.billAmount) return;\n\n        setTotalCost(\n            calculateTotalCost(store.billAmount, tipAmount, store.peopleAmount)\n        );\n        setTipAmountCost(\n            calculateTip(store.billAmount, tipAmount, store.peopleAmount)\n        );\n    }, [\n        store.billAmount,\n        store.tipAmount,\n        store.peopleAmount,\n        store.tipAmountCustom,\n    ]);\n\n    return (\n        <React.Fragment>\n            <SummaryRowTipAmount cost={tipAmountCost} />\n            <SummaryRowTotal cost={totalCost} />\n            <button className=\"reset-button\" onClick={store.resetStore}>\n                Reset\n            </button>\n        </React.Fragment>\n    );\n};\n","export const calculateTip = (bill: string, tip: string, people: string) => {\n    const billAmount = parseFloat(bill);\n    const tipAmountRaw = parseFloat(tip);\n    const tipAmount = tipAmountRaw / 100;\n    const peopleAmount = parseFloat(people);\n\n    const formula = (billAmount * tipAmount) / peopleAmount;\n    return formula.toFixed(2).toString();\n};\n\nexport const calculateTotalCost = (\n    bill: string,\n    tip: string,\n    people: string\n) => {\n    const billAmount = parseFloat(bill);\n    const tipAmount = parseFloat(tip) / 100;\n    const peopleAmount = parseFloat(people);\n\n    const billPerPerson = billAmount / peopleAmount;\n    const tipPerPerson = (billAmount * tipAmount) / peopleAmount;\n    const totalCostPerPerson = billPerPerson + tipPerPerson;\n    return totalCostPerPerson.toFixed(2).toString();\n};\n","import React from \"react\";\nimport { ActionsAmount } from \"./components/actions-amount/ActionsAmount\";\nimport { ActionsBill } from \"./components/actions-bill/ActionsBill\";\nimport { ActionsTip } from \"./components/actions-tip/ActionsTip\";\nimport { Logo } from \"./components/logo/Logo\";\nimport { Summary } from \"./components/summary/Summary\";\n\nfunction App() {\n    return (\n        <div className=\"page-wrapper\">\n            <Logo />\n\n            <div className=\"page-content\">\n                <div className=\"page-content__left\">\n                    <ActionsBill />\n                    <ActionsTip />\n                    <ActionsAmount />\n                </div>\n\n                <div className=\"page-content__right\">\n                    <Summary />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}